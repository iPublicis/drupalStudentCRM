<?php
/**
 * @file
 * Code for the Student CRM Basket feature.
 */

include_once('student_crm_basket.features.inc');

/**
 * Implements hook_block_info().
 */
function student_crm_basket_block_info() {
  return array('add_item' => array('info' => 'Add to basket'));
}

function student_crm_basket_menu() {
  $items = array();
  
  $items['node/%node/basket/%/%/%'] = array(
    'title' => 'Remove from basket',
    'page callback' => 'student_crm_basket_remove_item',
    'page arguments' => array(1, 3, 4, 5),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
  );
  
  return $items;
}

/**
 * Callback to remove an item from the basket
 */
function student_crm_basket_remove_item($node, $action, $type, $entity_id) {
  $field = ($type == 'crm_case') ? 'field_basket_cases' : 'field_basket_contacts';

  if($action == 'add') {
    $node->{$field}[LANGUAGE_NONE][] = array('target_id' => check_plain($entity_id),
                              'target_type' => check_plain($type));
  }
  else {
    foreach($node->{$field}[LANGUAGE_NONE] as $k => $entity) {
      if($entity['target_id'] == $entity_id) {
        unset($node->{$field}[LANGUAGE_NONE][$k]);
      }
    }
  }
  node_save($node);
  drupal_json_output(array('success' => TRUE ));
}

/**
 * Implements hook_block_view().
 */
function student_crm_basket_block_view($delta) {
  switch($delta) {
    case 'add_item':
      drupal_add_js(drupal_get_path('module', 'student_crm_basket') .'/js/student_crm_basket.js');
      $modal_link = l('Add to basket', NULL, array('fragment' => 'edit-basket-modal', 'external' => TRUE, 'attributes' => array('id' => 'show-basket')));
      return array('content' => $modal_link . drupal_render(drupal_get_form('student_crm_basket_form')));
      break;
  }
}

/**
 * Alter the basket view for filtering by the current user, or shared baskets.
 */
function student_crm_basket_views_query_alter(&$view) {
  if($view->name != 'baskets') {
    return;
  }
  global $user;
  if($view->current_display == 'page') {
    $group =  $view->query->set_where_group('OR');
    $view->query->add_where($group, 'users_node.uid', $user->uid, '=');
    $view->query->add_where($group, 'users_field_data_field_basket_users.uid', $user->uid, '=');
  }
}

/**
 * Formt o add item to a basket.
 */
function student_crm_basket_form($form, $form_state) {
  $form = array();
  
  $form['#attributes']['id'] = 'edit-basket-modal';
  $form['#attributes']['class'][] = 'element-invisible';
  
  $form['target_id'] = array(
    '#type' => 'hidden'
  );
  
  $form['target_entity'] = array(
    '#type' => 'hidden'
  );
  
  if ($contact = menu_get_object('crm_core_contact', 2)) {
    $form['target_id']['#value'] = $contact->contact_id;
    $form['target_entity']['#value'] = 'crm_core_contact';
  }
  if ($case = menu_get_object('crm_case', 2)) {
    $form['target_id']['#value'] = $case->cid;
    $form['target_entity']['#value'] = 'crm_case';
  }
  $view = views_get_view('baskets');
  $view->execute();
  $baskets = array();
  foreach($view->result as $result) {
    $set = TRUE;
    if($form['target_entity']['#value'] == 'crm_case') {
      foreach($result->field_field_basket_cases as $case) {
        if($case['raw']['target_id'] == $form['target_id']['#value']) {
          $set = FALSE;
        }
      }
    }
    elseif($form['target_entity']['#value'] == 'crm_core_contact') {
      foreach($result->field_field_basket_contacts as $contact) {
        if($contact['raw']['target_id'] == $form['target_id']['#value']) {
          $set = FALSE;
        }
      }
    }
    if($set) {
      $baskets[$result->nid] = $result->node_title;
    }
  }
  
  if(count($baskets)) {
    $form['basket'] = array(
      '#type' => 'select',
      '#title' => t('Basket'),
      '#options' => $baskets,  
    );    
  }
  else {
    drupal_add_js(array('studentCRMBasketOff' => true), 'setting');
  }
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Add to basket',
  );
  
  $form['cancel'] = array(
    '#markup' => l('Cancel', '', array('fragment' => 'basket-cancel', 'external' => TRUE, 'attributes' => array('id' => 'basket-cancel'))),
  );
  
  return $form;
}

/**
 * Form submit.
 */
function student_crm_basket_form_submit($form, $form_state) {
  $basket = node_load($form_state['values']['basket']);
  $field = array('target_type' => $form_state['values']['target_entity'],
                 'target_id' => $form_state['values']['target_id']);
  if($form_state['values']['target_entity'] == 'crm_case') {
    $basket->field_basket_cases[LANGUAGE_NONE][] = $field;
  }
  if($form_state['values']['target_entity'] == 'crm_core_contact') {
    $basket->field_basket_contacts[LANGUAGE_NONE][] = $field;
  }
  node_save($basket);
  drupal_set_message(t('Item added to @basket.', array('@basket' => $basket->title)));
}