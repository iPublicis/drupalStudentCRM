<?php

/**
 * Alter the field UI form to add additional checkbox allowing users to alter the field
 * via the use of activities.
 */
function student_crm_activity_case_alter_form_field_ui_field_edit_form_alter(&$form, $form_state, $form_id) {
  if ($form['instance']['entity_type']['#value'] != 'crm_case') {
    return;
  }
  $form['instance']['crm_case_alter'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow field to be changed by activities posted to the case.'),
    '#default_value' => (isset($form['#instance']['crm_case_alter'])) ? $form['#instance']['crm_case_alter'] : 0,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Here we look if any fields on the attached case
 * are alterable via activities, and if so, add in
 * form elements for these fields.
 */
function student_crm_activity_case_alter_form_student_crm_activity_create_alter(&$form, $form_state) {
  if ($form['entity']['#value']['type'] != 'crm_case') {
    return;
  }
  $case = crm_case_load($form['entity']['#value']['id']);
  if (!$case && isset($form_state['values']['entity']) && $form_state['values']['entity']['type'] == 'crm_case') {
    $case = crm_case_load($form_state['values']['entity']['id']);
  }
  if (!$case || !user_access('open and close cases')) {
    return;
  }
  drupal_add_css(drupal_get_path('module', 'student_crm_activity_case_alter') . '/css/student_crm_activity_case_alter.css');
  $fields = field_info_instances('crm_case', $case->type);
  $alterable_fields = array();
  foreach ($fields as $field_name => $field) {
    if ($field['crm_case_alter']) {
      $alterable_fields[$field_name] = $field;
    }
  }
  if (count($alterable_fields)) {
    $form['case_fields'] = array(
      '#type' => 'fieldset',
      '#title' => t('Update case fields'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#weight' => 10,
    );
    field_attach_form('crm_case', $case, $form['case_fields'], $form_state, $case->language);
    foreach ($fields as $field_name => $field) {
      if (!$alterable_fields[$field_name]) {
        unset($form['case_fields'][$field_name]);
      }
    }
    unset($form['case_fields']['#groups']);
    unset($form['case_fields']['#fieldgroups']);
  }
  
  //Add a status change checkbox.
  $status = field_get_items('crm_case', $case, 'case_status');
  $form['form-actions']['case_status_change'] = array(
    '#type' => 'checkbox',
    '#title' => ($status[0]['value']) ? t('Close case') : t('Re-open case'),
    '#prefix' => '<div class="case-status-change">',
    '#suffix' => '</div>',
    '#weight' => -3,
  );
  $form['#submit'][] = 'student_crm_activity_case_alter_form_student_crm_activity_create_alter_submit';
}

/**
 * Submit callback for an altered activity creation block.
 * Here we store altered field information and change
 * fields on the related case.
 */
function student_crm_activity_case_alter_form_student_crm_activity_create_alter_submit($form, &$form_state) {
  $case = crm_case_load($form['entity']['#value']['id']);
  $language = ($case->language) ? $case->language : LANGUAGE_NONE;
  $data = array();
  if ($form_state['values']['case_status_change']) {
    $case->case_status[$language][0]['value'] = ($case->case_status[$language][0]['value']) ? 0 : 1;
    $data['display_extra']['status']['label'] = t('Case status changed');
    $data['display_extra']['status']['message'] = ($case->case_status[$language][0]['value'])
                                    ? t('Opened')
                                    : t('Closed');
    $data['display_extra']['status']['class'] = ($case->case_status[$language][0]['value'])
                                    ? 'opened'
                                    : 'closed';
  }
  
  $fields = field_info_instances('crm_case', $case->type);
  $alterable_fields = array();
  
  foreach ($fields as $field_name => $field) {
    $rendered_before = field_attach_view('crm_case', $case, 'page');
    if ($field['crm_case_alter']) {
      if (md5(serialize($form_state['values'][$field_name])) != md5(serialize($case->{$field_name}))) {
        $rendered_before[$field_name]['#label_display'] = 'hidden';
        $data['display_extra'][$field_name]['old'] = drupal_render($rendered_before[$field_name]);
        $case->{$field_name} = $form_state['values'][$field_name];
        $rendered = field_attach_view('crm_case', $case, 'page');
        $rendered[$field_name]['#label_display'] = 'hidden';
        $data['display_extra'][$field_name]['label'] = $field['label'];
        $data['display_extra'][$field_name]['message'] = drupal_render($rendered[$field_name]);
        if (strip_tags($data['display_extra'][$field_name]['message']) == strip_tags($data['display_extra'][$field_name]['old'])) {
          unset($data['display_extra'][$field_name]);
        }
      }
    }
  }
  if (count($data)) {
    db_insert('student_crm_activity_case_alter')
      ->fields(array(
        'activity_id' => $form_state['activity_id'],
        'data' => serialize($data),
      ))
      ->execute();
    crm_case_save($case);
  }
}

/**
 * Implements hook_crm_core_activity_load().
 */
function student_crm_activity_case_alter_crm_core_activity_load($activities) {
  foreach ($activities as $id => $activity) {
    $data = db_select('student_crm_activity_case_alter', 'a')
            ->condition('a.activity_id', $id)
            ->fields('a', array('data'))
            ->execute()
            ->fetchField();
    if ($data = unserialize($data)) {
      $activities[$id]->data = $data;
    }
  }
  return $activities;
}

function student_crm_activity_case_alter_crm_core_activity_view($activity, $view_mode, $langcode) {
  if ($activity->data['display_extra']['status']) {
    $activity->content['status_change'] = array(
    
      '#markup' => '<span class="status-change ' . $activity->data['display_extra']['status']['class'] . '">' . $activity->data['display_extra']['status']['message'] . '</span>',
    );
  unset($activity->data['display_extra']['status']);
  }
  if (is_array($activity->data['display_extra']) && count($activity->data['display_extra'])) {
    drupal_add_css(drupal_get_path('module', 'student_crm_activity_case_alter') . '/css/student_crm_activity_case_alter.css');
    $headers = array('Field', 'Old value', 'New value');
    $rows = array();
    foreach ($activity->data['display_extra'] as $changed) {
      if (strlen(trim(strip_tags($changed['old']))) || strlen(trim(strip_tags($changed['message'])))) {
        $message = (module_exists('diff'))
                    ? diff_get_inline($changed['old'], $changed['message'])
                    : $changed['message'];
        $rows[] = array($changed['label'], $changed['old'], $message);
      }
    }
    if (!count($rows)) {
      return;
    }
    $activity->content['changed'] = array(
      '#type' => 'fieldset',
      '#title' => 'Changes',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#weight' => 10,
    );
    $activity->content['changed']['table'] = array(
      '#theme' => 'table',
      '#header' => $headers,
      '#rows' => $rows,
    );
  }
}